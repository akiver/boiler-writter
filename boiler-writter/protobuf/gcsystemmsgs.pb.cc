// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gcsystemmsgs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gcsystemmsgs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMsgGCHVacVerificationChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgGCHVacVerificationChange_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EGCSystemMsg_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ESOMsg_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EGCBaseClientMsg_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EGCToGCMsg_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_gcsystemmsgs_2eproto() {
  protobuf_AddDesc_gcsystemmsgs_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "gcsystemmsgs.proto");
  GOOGLE_CHECK(file != NULL);
  CMsgGCHVacVerificationChange_descriptor_ = file->message_type(0);
  static const int CMsgGCHVacVerificationChange_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHVacVerificationChange, steamid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHVacVerificationChange, appid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHVacVerificationChange, is_verified_),
  };
  CMsgGCHVacVerificationChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgGCHVacVerificationChange_descriptor_,
      CMsgGCHVacVerificationChange::default_instance_,
      CMsgGCHVacVerificationChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHVacVerificationChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCHVacVerificationChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgGCHVacVerificationChange));
  EGCSystemMsg_descriptor_ = file->enum_type(0);
  ESOMsg_descriptor_ = file->enum_type(1);
  EGCBaseClientMsg_descriptor_ = file->enum_type(2);
  EGCToGCMsg_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_gcsystemmsgs_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgGCHVacVerificationChange_descriptor_, &CMsgGCHVacVerificationChange::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_gcsystemmsgs_2eproto() {
  delete CMsgGCHVacVerificationChange::default_instance_;
  delete CMsgGCHVacVerificationChange_reflection_;
}

void protobuf_AddDesc_gcsystemmsgs_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022gcsystemmsgs.proto\"S\n\034CMsgGCHVacVerifi"
    "cationChange\022\017\n\007steamid\030\001 \001(\006\022\r\n\005appid\030\002"
    " \001(\r\022\023\n\013is_verified\030\003 \001(\010*\260\023\n\014EGCSystemM"
    "sg\022\023\n\017k_EGCMsgInvalid\020\000\022\021\n\rk_EGCMsgMulti"
    "\020\001\022\030\n\024k_EGCMsgGenericReply\020\n\022\026\n\022k_EGCMsg"
    "SystemBase\0202\022\036\n\032k_EGCMsgAchievementAward"
    "ed\0203\022\026\n\022k_EGCMsgConCommand\0204\022\030\n\024k_EGCMsg"
    "StartPlaying\0205\022\027\n\023k_EGCMsgStopPlaying\0206\022"
    "\033\n\027k_EGCMsgStartGameserver\0207\022\032\n\026k_EGCMsg"
    "StopGameserver\0208\022\025\n\021k_EGCMsgWGRequest\0209\022"
    "\026\n\022k_EGCMsgWGResponse\020:\022\"\n\036k_EGCMsgGetUs"
    "erGameStatsSchema\020;\022*\n&k_EGCMsgGetUserGa"
    "meStatsSchemaResponse\020<\022\"\n\036k_EGCMsgGetUs"
    "erStatsDEPRECATED\020=\022 \n\034k_EGCMsgGetUserSt"
    "atsResponse\020>\022\032\n\026k_EGCMsgAppInfoUpdated\020"
    "\?\022\033\n\027k_EGCMsgValidateSession\020@\022#\n\037k_EGCM"
    "sgValidateSessionResponse\020A\022\"\n\036k_EGCMsgL"
    "ookupAccountFromInput\020B\022\033\n\027k_EGCMsgSendH"
    "TTPRequest\020C\022#\n\037k_EGCMsgSendHTTPRequestR"
    "esponse\020D\022\030\n\024k_EGCMsgPreTestSetup\020E\022\037\n\033k"
    "_EGCMsgRecordSupportAction\020F\022(\n$k_EGCMsg"
    "GetAccountDetails_DEPRECATED\020G\022\"\n\036k_EGCM"
    "sgReceiveInterAppMessage\020I\022\030\n\024k_EGCMsgFi"
    "ndAccounts\020J\022\025\n\021k_EGCMsgPostAlert\020K\022\027\n\023k"
    "_EGCMsgGetLicenses\020L\022\030\n\024k_EGCMsgGetUserS"
    "tats\020M\022\027\n\023k_EGCMsgGetCommands\020N\022\037\n\033k_EGC"
    "MsgGetCommandsResponse\020O\022\032\n\026k_EGCMsgAddF"
    "reeLicense\020P\022\"\n\036k_EGCMsgAddFreeLicenseRe"
    "sponse\020Q\022\031\n\025k_EGCMsgGetIPLocation\020R\022!\n\035k"
    "_EGCMsgGetIPLocationResponse\020S\022\035\n\031k_EGCM"
    "sgSystemStatsSchema\020T\022\032\n\026k_EGCMsgGetSyst"
    "emStats\020U\022\"\n\036k_EGCMsgGetSystemStatsRespo"
    "nse\020V\022\025\n\021k_EGCMsgSendEmail\020W\022\035\n\031k_EGCMsg"
    "SendEmailResponse\020X\022\034\n\030k_EGCMsgGetEmailT"
    "emplate\020Y\022$\n k_EGCMsgGetEmailTemplateRes"
    "ponse\020Z\022\032\n\026k_EGCMsgGrantGuestPass\020[\022\"\n\036k"
    "_EGCMsgGrantGuestPassResponse\020\\\022\035\n\031k_EGC"
    "MsgGetAccountDetails\020]\022%\n!k_EGCMsgGetAcc"
    "ountDetailsResponse\020^\022\033\n\027k_EGCMsgGetPers"
    "onaNames\020_\022#\n\037k_EGCMsgGetPersonaNamesRes"
    "ponse\020`\022\030\n\024k_EGCMsgMultiplexMsg\020a\022 \n\034k_E"
    "GCMsgMultiplexMsgResponse\020b\022$\n k_EGCMsgW"
    "ebAPIRegisterInterfaces\020e\022\034\n\030k_EGCMsgWeb"
    "APIJobRequest\020f\022(\n$k_EGCMsgWebAPIJobRequ"
    "estHttpResponse\020h\022+\n\'k_EGCMsgWebAPIJobRe"
    "questForwardResponse\020i\022\031\n\024k_EGCMsgMemCac"
    "hedGet\020\310\001\022!\n\034k_EGCMsgMemCachedGetRespons"
    "e\020\311\001\022\031\n\024k_EGCMsgMemCachedSet\020\312\001\022\034\n\027k_EGC"
    "MsgMemCachedDelete\020\313\001\022\033\n\026k_EGCMsgMemCach"
    "edStats\020\314\001\022#\n\036k_EGCMsgMemCachedStatsResp"
    "onse\020\315\001\022\037\n\032k_EGCMsgMasterSetDirectory\020\334\001"
    "\022\'\n\"k_EGCMsgMasterSetDirectoryResponse\020\335"
    "\001\022#\n\036k_EGCMsgMasterSetWebAPIRouting\020\336\001\022+"
    "\n&k_EGCMsgMasterSetWebAPIRoutingResponse"
    "\020\337\001\022&\n!k_EGCMsgMasterSetClientMsgRouting"
    "\020\340\001\022.\n)k_EGCMsgMasterSetClientMsgRouting"
    "Response\020\341\001\022\027\n\022k_EGCMsgSetOptions\020\342\001\022\037\n\032"
    "k_EGCMsgSetOptionsResponse\020\343\001\022\030\n\023k_EGCMs"
    "gSystemBase2\020\364\003\022#\n\036k_EGCMsgGetPurchaseTr"
    "ustStatus\020\365\003\022+\n&k_EGCMsgGetPurchaseTrust"
    "StatusResponse\020\366\003\022\032\n\025k_EGCMsgUpdateSessi"
    "on\020\367\003\022%\n k_EGCMsgGCAccountVacStatusChang"
    "e\020\370\003\022\034\n\027k_EGCMsgCheckFriendship\020\371\003\022$\n\037k_"
    "EGCMsgCheckFriendshipResponse\020\372\003\022\"\n\035k_EG"
    "CMsgVacVerificationChange\020\206\004*\357\001\n\006ESOMsg\022"
    "\023\n\017k_ESOMsg_Create\020\025\022\023\n\017k_ESOMsg_Update\020"
    "\026\022\024\n\020k_ESOMsg_Destroy\020\027\022\034\n\030k_ESOMsg_Cach"
    "eSubscribed\020\030\022\036\n\032k_ESOMsg_CacheUnsubscri"
    "bed\020\031\022\033\n\027k_ESOMsg_UpdateMultiple\020\032\022#\n\037k_"
    "ESOMsg_CacheSubscriptionCheck\020\033\022%\n!k_ESO"
    "Msg_CacheSubscriptionRefresh\020\034*\310\001\n\020EGCBa"
    "seClientMsg\022\032\n\025k_EMsgGCClientWelcome\020\244\037\022"
    "\032\n\025k_EMsgGCServerWelcome\020\245\037\022\030\n\023k_EMsgGCC"
    "lientHello\020\246\037\022\030\n\023k_EMsgGCServerHello\020\247\037\022"
    "#\n\036k_EMsgGCClientConnectionStatus\020\251\037\022#\n\036"
    "k_EMsgGCServerConnectionStatus\020\252\037*\211\002\n\nEG"
    "CToGCMsg\022\032\n\025k_EGCToGCMsgMasterAck\020\226\001\022\"\n\035"
    "k_EGCToGCMsgMasterAckResponse\020\227\001\022\027\n\022k_EG"
    "CToGCMsgRouted\020\230\001\022\034\n\027k_EGCToGCMsgRoutedR"
    "eply\020\231\001\022\032\n\025k_EMsgUpdateSessionIP\020\232\001\022\033\n\026k"
    "_EMsgRequestSessionIP\020\233\001\022#\n\036k_EMsgReques"
    "tSessionIPResponse\020\234\001\022&\n!k_EGCToGCMsgMas"
    "terStartupComplete\020\235\001B\005H\001\200\001\000", 3308);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gcsystemmsgs.proto", &protobuf_RegisterTypes);
  CMsgGCHVacVerificationChange::default_instance_ = new CMsgGCHVacVerificationChange();
  CMsgGCHVacVerificationChange::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_gcsystemmsgs_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_gcsystemmsgs_2eproto {
  StaticDescriptorInitializer_gcsystemmsgs_2eproto() {
    protobuf_AddDesc_gcsystemmsgs_2eproto();
  }
} static_descriptor_initializer_gcsystemmsgs_2eproto_;
const ::google::protobuf::EnumDescriptor* EGCSystemMsg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGCSystemMsg_descriptor_;
}
bool EGCSystemMsg_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 10:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 101:
    case 102:
    case 104:
    case 105:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 500:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 518:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ESOMsg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ESOMsg_descriptor_;
}
bool ESOMsg_IsValid(int value) {
  switch(value) {
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGCBaseClientMsg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGCBaseClientMsg_descriptor_;
}
bool EGCBaseClientMsg_IsValid(int value) {
  switch(value) {
    case 4004:
    case 4005:
    case 4006:
    case 4007:
    case 4009:
    case 4010:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGCToGCMsg_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EGCToGCMsg_descriptor_;
}
bool EGCToGCMsg_IsValid(int value) {
  switch(value) {
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgGCHVacVerificationChange::kSteamidFieldNumber;
const int CMsgGCHVacVerificationChange::kAppidFieldNumber;
const int CMsgGCHVacVerificationChange::kIsVerifiedFieldNumber;
#endif  // !_MSC_VER

CMsgGCHVacVerificationChange::CMsgGCHVacVerificationChange()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CMsgGCHVacVerificationChange::InitAsDefaultInstance() {
}

CMsgGCHVacVerificationChange::CMsgGCHVacVerificationChange(const CMsgGCHVacVerificationChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CMsgGCHVacVerificationChange::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
  appid_ = 0u;
  is_verified_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgGCHVacVerificationChange::~CMsgGCHVacVerificationChange() {
  SharedDtor();
}

void CMsgGCHVacVerificationChange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CMsgGCHVacVerificationChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHVacVerificationChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgGCHVacVerificationChange_descriptor_;
}

const CMsgGCHVacVerificationChange& CMsgGCHVacVerificationChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gcsystemmsgs_2eproto();
  return *default_instance_;
}

CMsgGCHVacVerificationChange* CMsgGCHVacVerificationChange::default_instance_ = NULL;

CMsgGCHVacVerificationChange* CMsgGCHVacVerificationChange::New() const {
  return new CMsgGCHVacVerificationChange;
}

void CMsgGCHVacVerificationChange::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    steamid_ = GOOGLE_ULONGLONG(0);
    appid_ = 0u;
    is_verified_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgGCHVacVerificationChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
          set_has_steamid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_appid;
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_appid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
          set_has_appid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_verified;
        break;
      }

      // optional bool is_verified = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_verified:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_verified_)));
          set_has_is_verified();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CMsgGCHVacVerificationChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (has_appid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional bool is_verified = 3;
  if (has_is_verified()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_verified(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CMsgGCHVacVerificationChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (has_appid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional bool is_verified = 3;
  if (has_is_verified()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_verified(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CMsgGCHVacVerificationChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool is_verified = 3;
    if (has_is_verified()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHVacVerificationChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgGCHVacVerificationChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgGCHVacVerificationChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgGCHVacVerificationChange::MergeFrom(const CMsgGCHVacVerificationChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_steamid()) {
      set_steamid(from.steamid());
    }
    if (from.has_appid()) {
      set_appid(from.appid());
    }
    if (from.has_is_verified()) {
      set_is_verified(from.is_verified());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgGCHVacVerificationChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHVacVerificationChange::CopyFrom(const CMsgGCHVacVerificationChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHVacVerificationChange::IsInitialized() const {

  return true;
}

void CMsgGCHVacVerificationChange::Swap(CMsgGCHVacVerificationChange* other) {
  if (other != this) {
    std::swap(steamid_, other->steamid_);
    std::swap(appid_, other->appid_);
    std::swap(is_verified_, other->is_verified_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgGCHVacVerificationChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgGCHVacVerificationChange_descriptor_;
  metadata.reflection = CMsgGCHVacVerificationChange_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
